load dining-philosophers-rooms-preds.maude

mod DINING-PHILOSOPHERS-ROOMS-CHECK is
    pr DINING-PHILOSOPHERS-ROOMS-PREDS{5} .
    including MODEL-CHECKER .
    including LTL-SIMPLIFIER .
endm

eof

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, []~(phil-sticks([0], 1) /\ phil-sticks([1], 1) /\ phil-sticks([2], 1) /\ phil-sticks([3], 1) /\ phil-sticks([4], 1))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, []~ (phil-sticks([4], 1) /\ (
    phil-sticks([3], 1) /\ (phil-sticks([2], 1) /\ (phil-sticks([0], 1) /\ phil-sticks([1], 1)))))) .
rewrites: 737494 in 640ms cpu (643ms real) (1151210 rewrites/second)
result Bool: true
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, [] (phil-status([0], hungry) -> (<> phil-status([0], eating)))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, [](phil-status([0], hungry) -> <> phil-status(
    [0], eating))) .
rewrites: 3237 in 0ms cpu (3ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    0) philosopher([2], hungry, 2) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry, 2) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2],
    eating, 2) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([2]) chopstick([3])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 1),[4],philosopher([2], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 2)
    philosopher([1], hungry, 0) philosopher([3], hungry, 1),[4] [2],philosopher([2], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 2) philosopher([1], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[2],philosopher([2], hungry, 0)],'grab-stick}, {[chopstick(
    [2]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 2) philosopher([4], hungry,
    0),[2],philosopher([2], hungry, 0)],'eat} {[chopstick([2]) philosopher([0], hungry, 2) philosopher([1], hungry, 0)
    philosopher([3], eating, 2) philosopher([4], hungry, 0),[2],philosopher([2], hungry, 0)],'think} {[chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([4], hungry, 0),[
    2],philosopher([2], hungry, 0) philosopher([3], thinking, 0)],'get-hungry} {[chopstick([2]) chopstick([3])
    chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([4], hungry, 0),[2] [3],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([4], hungry, 0),[
    3],philosopher([3], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4]) philosopher([0], hungry, 2)
    philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([4], hungry, 0),[3],philosopher([3], hungry,
    0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    2) philosopher([4], hungry, 0),[3],philosopher([3], hungry, 0)],'eat} {[chopstick([4]) philosopher([0], hungry, 2)
    philosopher([1], hungry, 0) philosopher([2], eating, 2) philosopher([4], hungry, 0),[3],philosopher([3], hungry,
    0)],'think} {[chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0)
    philosopher([4], hungry, 0),[3],philosopher([2], thinking, 0) philosopher([3], hungry, 0)],'get-hungry} {[
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([
    4], hungry, 0),[3] [2],philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick(
    [3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], hungry, 0),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([2]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    2],philosopher([2], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, [] (phil-status([1], hungry) -> (<> phil-status([1], eating)))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, [](phil-status([1], hungry) -> <> phil-status(
    [1], eating))) .
rewrites: 2267 in 0ms cpu (1ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick}, {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'eat} {[chopstick([4])
    philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([0], thinking, 0) philosopher([4], hungry,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 0),[4] [0],philosopher([0], hungry, 0) philosopher([4], hungry, 0)],'enter} {[
    chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([
    3], hungry, 0) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([1])
    chopstick([4]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0) philosopher([4],
    hungry, 1),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([1]) philosopher([1], hungry, 1) philosopher([
    2], hungry, 1) philosopher([3], hungry, 0) philosopher([4], hungry, 2),[0],philosopher([0], hungry, 0)],'eat} {[
    chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0) philosopher([4],
    eating, 2),[0],philosopher([0], hungry, 0)],'think} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1],
    hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[0],philosopher([0], hungry, 0) philosopher([4],
    thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1) philosopher([
    2], hungry, 1) philosopher([3], hungry, 0),[0] [4],philosopher([0], hungry, 0) philosopher([4], hungry, 0)],'enter}
    {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 1) philosopher(
    [2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([1])
    chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3],
    hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, [] (phil-status([2], hungry) -> (<> phil-status([2], eating)))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, [](phil-status([2], hungry) -> <> phil-status(
    [2], eating))) .
rewrites: 2521 in 15ms cpu (3ms real) (161344 rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4],philosopher([0], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4] [0],philosopher([0], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick}, {[chopstick(
    [0]) philosopher([1], hungry, 2) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry,
    0),[0],philosopher([0], hungry, 0)],'eat} {[chopstick([0]) philosopher([1], eating, 2) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'think} {[chopstick([0])
    chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    0],philosopher([0], hungry, 0) philosopher([1], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0] [1],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    1],philosopher([1], hungry, 0)],'grab-stick} {[chopstick([1]) chopstick([2]) philosopher([0], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[1],philosopher([1], hungry,
    0)],'grab-stick} {[chopstick([2]) philosopher([0], hungry, 2) philosopher([2], hungry, 1) philosopher([3], hungry,
    1) philosopher([4], hungry, 0),[1],philosopher([1], hungry, 0)],'eat} {[chopstick([2]) philosopher([0], eating, 2)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[1],philosopher([1], hungry,
    0)],'think} {[chopstick([0]) chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 0),[1],philosopher([0], thinking, 0) philosopher([1], hungry, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([
    4], hungry, 0),[1] [0],philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([0]) chopstick(
    [1]) chopstick([2]) philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([0]) chopstick([2])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    0],philosopher([0], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, [] (phil-status([3], hungry) -> (<> phil-status([3], eating)))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, [](phil-status([3], hungry) -> <> phil-status(
    [3], eating))) .
rewrites: 2674 in 0ms cpu (2ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4],philosopher([0], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4] [0],philosopher([0], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([
    1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry,
    1),[0],philosopher([0], hungry, 0)],'grab-stick} {[philosopher([1], hungry, 2) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0)],'eat} {[philosopher([1],
    eating, 2) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0],
    hungry, 0)],'think} {[chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0)],'get-hungry} {[
    chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([1]) chopstick([2])
    philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'grab-stick}, {[chopstick([1]) philosopher([0], hungry, 0) philosopher([2], hungry,
    2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'eat} {[chopstick([1])
    philosopher([0], hungry, 0) philosopher([2], eating, 2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'think} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0) philosopher([2], thinking,
    0)],'get-hungry} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0) philosopher([3],
    hungry, 1) philosopher([4], hungry, 1),[1] [2],philosopher([1], hungry, 0) philosopher([2], hungry, 0)],'enter} {[
    chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([
    3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([2])
    chopstick([3]) philosopher([0], hungry, 0) philosopher([1], hungry, 1) philosopher([3], hungry, 1) philosopher([4],
    hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([3]) philosopher([0], hungry, 0) philosopher([
    1], hungry, 2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'eat} {[
    chopstick([3]) philosopher([0], hungry, 0) philosopher([1], eating, 2) philosopher([3], hungry, 1) philosopher([4],
    hungry, 1),[2],philosopher([2], hungry, 0)],'think} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0],
    hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([1], thinking, 0) philosopher([
    2], hungry, 0)],'get-hungry} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2] [1],philosopher([1], hungry, 0) philosopher([2],
    hungry, 0)],'enter} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0) philosopher([2],
    hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([3]) philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, [] (phil-status([4], hungry) -> (<> phil-status([4], eating)))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, [](phil-status([4], hungry) -> <>
    phil-status([4], eating))) .
rewrites: 2801 in 0ms cpu (2ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4],philosopher([0], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4] [0],philosopher([0], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([
    1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry,
    1),[0],philosopher([0], hungry, 0)],'grab-stick} {[philosopher([1], hungry, 2) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0)],'eat} {[philosopher([1],
    eating, 2) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0],
    hungry, 0)],'think} {[chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0)],'get-hungry} {[
    chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([1]) chopstick([2])
    philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'grab-stick} {[chopstick([2]) philosopher([0], hungry, 1) philosopher([2], hungry,
    1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 1) philosopher([2], hungry, 2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'eat} {[philosopher([0], hungry, 1) philosopher([2], eating, 2) philosopher([3],
    hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'think} {[chopstick([2]) chopstick([3])
    philosopher([0], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)
    philosopher([2], thinking, 0)],'get-hungry} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1] [2],philosopher([1], hungry, 0) philosopher([2],
    hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick}, {[chopstick(
    [2]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([3], hungry, 2) philosopher([4], hungry,
    1),[2],philosopher([2], hungry, 0)],'eat} {[chopstick([2]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([3], eating, 2) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'think} {[chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([4], hungry, 1),[
    2],philosopher([2], hungry, 0) philosopher([3], thinking, 0)],'get-hungry} {[chopstick([2]) chopstick([3])
    chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([4], hungry, 1),[2] [3],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) chopstick([4])
    philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([4], hungry, 1),[
    3],philosopher([3], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4]) philosopher([0], hungry, 1)
    philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([4], hungry, 1),[3],philosopher([3], hungry,
    0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([2], hungry,
    2) philosopher([4], hungry, 1),[3],philosopher([3], hungry, 0)],'eat} {[chopstick([4]) philosopher([0], hungry, 1)
    philosopher([1], hungry, 0) philosopher([2], eating, 2) philosopher([4], hungry, 1),[3],philosopher([3], hungry,
    0)],'think} {[chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([4], hungry, 1),[3],philosopher([2], thinking, 0) philosopher([3], hungry, 0)],'get-hungry} {[
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([
    4], hungry, 1),[3] [2],philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick(
    [3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([2]) chopstick([4])
    philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    2],philosopher([2], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, ([]<> phil-status([0], hungry)) -> ([]<> phil-status([0], eating))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, []<> phil-status([0], hungry) -> []<>
    phil-status([0], eating)) .
rewrites: 3354 in 15ms cpu (3ms real) (214656 rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    0) philosopher([2], hungry, 2) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry, 2) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2],
    eating, 2) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([2]) chopstick([3])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 1),[4],philosopher([2], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 2)
    philosopher([1], hungry, 0) philosopher([3], hungry, 1),[4] [2],philosopher([2], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 2) philosopher([1], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[2],philosopher([2], hungry, 0)],'grab-stick}, {[chopstick(
    [2]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 2) philosopher([4], hungry,
    0),[2],philosopher([2], hungry, 0)],'eat} {[chopstick([2]) philosopher([0], hungry, 2) philosopher([1], hungry, 0)
    philosopher([3], eating, 2) philosopher([4], hungry, 0),[2],philosopher([2], hungry, 0)],'think} {[chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([4], hungry, 0),[
    2],philosopher([2], hungry, 0) philosopher([3], thinking, 0)],'get-hungry} {[chopstick([2]) chopstick([3])
    chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([4], hungry, 0),[2] [3],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([4], hungry, 0),[
    3],philosopher([3], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4]) philosopher([0], hungry, 2)
    philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([4], hungry, 0),[3],philosopher([3], hungry,
    0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    2) philosopher([4], hungry, 0),[3],philosopher([3], hungry, 0)],'eat} {[chopstick([4]) philosopher([0], hungry, 2)
    philosopher([1], hungry, 0) philosopher([2], eating, 2) philosopher([4], hungry, 0),[3],philosopher([3], hungry,
    0)],'think} {[chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0)
    philosopher([4], hungry, 0),[3],philosopher([2], thinking, 0) philosopher([3], hungry, 0)],'get-hungry} {[
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([
    4], hungry, 0),[3] [2],philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick(
    [3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], hungry, 0),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([2]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    2],philosopher([2], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, ([]<> phil-status([1], hungry)) -> ([]<> phil-status([1], eating))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, []<> phil-status([1], hungry) -> []<>
    phil-status([1], eating)) .
rewrites: 2365 in 0ms cpu (2ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick}, {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'eat} {[chopstick([4])
    philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([0], thinking, 0) philosopher([4], hungry,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 0),[4] [0],philosopher([0], hungry, 0) philosopher([4], hungry, 0)],'enter} {[
    chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([
    3], hungry, 0) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([1])
    chopstick([4]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0) philosopher([4],
    hungry, 1),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([1]) philosopher([1], hungry, 1) philosopher([
    2], hungry, 1) philosopher([3], hungry, 0) philosopher([4], hungry, 2),[0],philosopher([0], hungry, 0)],'eat} {[
    chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0) philosopher([4],
    eating, 2),[0],philosopher([0], hungry, 0)],'think} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1],
    hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[0],philosopher([0], hungry, 0) philosopher([4],
    thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([1], hungry, 1) philosopher([
    2], hungry, 1) philosopher([3], hungry, 0),[0] [4],philosopher([0], hungry, 0) philosopher([4], hungry, 0)],'enter}
    {[chopstick([0]) chopstick([1]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 1) philosopher(
    [2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([1])
    chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3],
    hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, ([]<> phil-status([2], hungry)) -> ([]<> phil-status([2], eating))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, []<> phil-status([2], hungry) -> []<>
    phil-status([2], eating)) .
rewrites: 2625 in 0ms cpu (2ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4],philosopher([0], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4] [0],philosopher([0], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick}, {[chopstick(
    [0]) philosopher([1], hungry, 2) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry,
    0),[0],philosopher([0], hungry, 0)],'eat} {[chopstick([0]) philosopher([1], eating, 2) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'think} {[chopstick([0])
    chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    0],philosopher([0], hungry, 0) philosopher([1], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0] [1],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    1],philosopher([1], hungry, 0)],'grab-stick} {[chopstick([1]) chopstick([2]) philosopher([0], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[1],philosopher([1], hungry,
    0)],'grab-stick} {[chopstick([2]) philosopher([0], hungry, 2) philosopher([2], hungry, 1) philosopher([3], hungry,
    1) philosopher([4], hungry, 0),[1],philosopher([1], hungry, 0)],'eat} {[chopstick([2]) philosopher([0], eating, 2)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[1],philosopher([1], hungry,
    0)],'think} {[chopstick([0]) chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 0),[1],philosopher([0], thinking, 0) philosopher([1], hungry, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([
    4], hungry, 0),[1] [0],philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([0]) chopstick(
    [1]) chopstick([2]) philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([0]) chopstick([2])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 0),[
    0],philosopher([0], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, ([]<> phil-status([3], hungry)) -> ([]<> phil-status([3], eating))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, []<> phil-status([3], hungry) -> []<>
    phil-status([3], eating)) .
rewrites: 2783 in 0ms cpu (2ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4],philosopher([0], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4] [0],philosopher([0], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([
    1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry,
    1),[0],philosopher([0], hungry, 0)],'grab-stick} {[philosopher([1], hungry, 2) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0)],'eat} {[philosopher([1],
    eating, 2) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0],
    hungry, 0)],'think} {[chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0)],'get-hungry} {[
    chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([1]) chopstick([2])
    philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'grab-stick}, {[chopstick([1]) philosopher([0], hungry, 0) philosopher([2], hungry,
    2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'eat} {[chopstick([1])
    philosopher([0], hungry, 0) philosopher([2], eating, 2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'think} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0) philosopher([2], thinking,
    0)],'get-hungry} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0) philosopher([3],
    hungry, 1) philosopher([4], hungry, 1),[1] [2],philosopher([1], hungry, 0) philosopher([2], hungry, 0)],'enter} {[
    chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([
    3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([2])
    chopstick([3]) philosopher([0], hungry, 0) philosopher([1], hungry, 1) philosopher([3], hungry, 1) philosopher([4],
    hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([3]) philosopher([0], hungry, 0) philosopher([
    1], hungry, 2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'eat} {[
    chopstick([3]) philosopher([0], hungry, 0) philosopher([1], eating, 2) philosopher([3], hungry, 1) philosopher([4],
    hungry, 1),[2],philosopher([2], hungry, 0)],'think} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0],
    hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([1], thinking, 0) philosopher([
    2], hungry, 0)],'get-hungry} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2] [1],philosopher([1], hungry, 0) philosopher([2],
    hungry, 0)],'enter} {[chopstick([1]) chopstick([2]) chopstick([3]) philosopher([0], hungry, 0) philosopher([2],
    hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([3]) philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'grab-stick})
Maude>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Maude> red modelCheck(initState, ([]<> phil-status([4], hungry)) -> ([]<> phil-status([4], eating))) .
reduce in DINING-PHILOSOPHERS-ROOMS-CHECK : modelCheck(initState, []<> phil-status([4], hungry) -> []<>
    phil-status([4], eating)) .
rewrites: 2915 in 0ms cpu (3ms real) (~ rewrites/second)
result ModelCheckResult: counterexample({[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),
    empty,philosopher([0], thinking, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0) philosopher([3],
    thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([
    3]) chopstick([4]),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0) philosopher([2], thinking, 0)
    philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]),[0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], thinking, 0) philosopher([3], thinking, 0) philosopher([4], thinking, 0)],'get-hungry} {[
    chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2],philosopher([0], hungry, 0)
    philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], thinking, 0) philosopher([4], thinking,
    0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]),[0] [1] [2] [3],
    philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], thinking, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) chopstick([2]) chopstick([3])
    chopstick([4]),[0] [1] [2] [3] [4],philosopher([0], hungry, 0) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 0),[1] [2] [3] [4],philosopher([1], hungry, 0) philosopher([
    2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0]) chopstick([1])
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0),[2] [3] [4],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([0])
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0),[3] [4],philosopher([3], hungry, 0) philosopher([4], hungry, 0)],'enter} {[chopstick([
    0]) chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 0) philosopher([1],
    hungry, 0) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    chopstick([1]) chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([2], hungry, 0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([
    2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry, 0) philosopher([2], hungry,
    0) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4])
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 0) philosopher([3], hungry, 0),[
    4],philosopher([4], hungry, 0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 2) philosopher([1], hungry,
    1) philosopher([2], hungry, 1) philosopher([3], hungry, 0),[4],philosopher([4], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 2) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[
    4],philosopher([4], hungry, 0)],'eat} {[philosopher([0], eating, 2) philosopher([1], hungry, 1) philosopher([2],
    hungry, 1) philosopher([3], hungry, 1),[4],philosopher([4], hungry, 0)],'think} {[chopstick([0]) chopstick([1])
    philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4],philosopher([0], thinking,
    0) philosopher([4], hungry, 0)],'get-hungry} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1)
    philosopher([2], hungry, 1) philosopher([3], hungry, 1),[4] [0],philosopher([0], hungry, 0) philosopher([4],
    hungry, 0)],'enter} {[chopstick([0]) chopstick([1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 0),[0],philosopher([0], hungry, 0)],'grab-stick} {[chopstick([
    1]) philosopher([1], hungry, 1) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry,
    1),[0],philosopher([0], hungry, 0)],'grab-stick} {[philosopher([1], hungry, 2) philosopher([2], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0)],'eat} {[philosopher([1],
    eating, 2) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[0],philosopher([0],
    hungry, 0)],'think} {[chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1)
    philosopher([4], hungry, 1),[0],philosopher([0], hungry, 0) philosopher([1], thinking, 0)],'get-hungry} {[
    chopstick([1]) chopstick([2]) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    0] [1],philosopher([0], hungry, 0) philosopher([1], hungry, 0)],'enter} {[chopstick([1]) chopstick([2])
    philosopher([0], hungry, 0) philosopher([2], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'grab-stick} {[chopstick([2]) philosopher([0], hungry, 1) philosopher([2], hungry,
    1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'grab-stick} {[
    philosopher([0], hungry, 1) philosopher([2], hungry, 2) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    1],philosopher([1], hungry, 0)],'eat} {[philosopher([0], hungry, 1) philosopher([2], eating, 2) philosopher([3],
    hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)],'think} {[chopstick([2]) chopstick([3])
    philosopher([0], hungry, 1) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1],philosopher([1], hungry, 0)
    philosopher([2], thinking, 0)],'get-hungry} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 1)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[1] [2],philosopher([1], hungry, 0) philosopher([2],
    hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([3], hungry, 1) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick}, {[chopstick(
    [2]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([3], hungry, 2) philosopher([4], hungry,
    1),[2],philosopher([2], hungry, 0)],'eat} {[chopstick([2]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([3], eating, 2) philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'think} {[chopstick([2])
    chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([4], hungry, 1),[
    2],philosopher([2], hungry, 0) philosopher([3], thinking, 0)],'get-hungry} {[chopstick([2]) chopstick([3])
    chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([4], hungry, 1),[2] [3],
    philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick([3]) chopstick([4])
    philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([2], hungry, 0) philosopher([4], hungry, 1),[
    3],philosopher([3], hungry, 0)],'grab-stick} {[chopstick([3]) chopstick([4]) philosopher([0], hungry, 1)
    philosopher([1], hungry, 0) philosopher([2], hungry, 1) philosopher([4], hungry, 1),[3],philosopher([3], hungry,
    0)],'grab-stick} {[chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([2], hungry,
    2) philosopher([4], hungry, 1),[3],philosopher([3], hungry, 0)],'eat} {[chopstick([4]) philosopher([0], hungry, 1)
    philosopher([1], hungry, 0) philosopher([2], eating, 2) philosopher([4], hungry, 1),[3],philosopher([3], hungry,
    0)],'think} {[chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0)
    philosopher([4], hungry, 1),[3],philosopher([2], thinking, 0) philosopher([3], hungry, 0)],'get-hungry} {[
    chopstick([2]) chopstick([3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([
    4], hungry, 1),[3] [2],philosopher([2], hungry, 0) philosopher([3], hungry, 0)],'enter} {[chopstick([2]) chopstick(
    [3]) chopstick([4]) philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([3], hungry, 0)
    philosopher([4], hungry, 1),[2],philosopher([2], hungry, 0)],'grab-stick} {[chopstick([2]) chopstick([4])
    philosopher([0], hungry, 1) philosopher([1], hungry, 0) philosopher([3], hungry, 1) philosopher([4], hungry, 1),[
    2],philosopher([2], hungry, 0)],'grab-stick})
Maude>